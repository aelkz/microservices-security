# =============================================
# springboot configurations
# ---------------------------------------------
spring:
  application:
    name: fuse-auth-integration-api
  datasource:
    initialize: false

api:
  title: fuse-auth-integration-api
  description: secured fuse application with keycloak adapter
  version: 1
  hostname: api-auth-integration.apps.arekkusu.io

logging:
  config: classpath:logback.xml
  level: debug

# options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel:
  springboot:
    name: fuse-auth-integration-api
    main-run-controller: true
  component:
    servlet:
      mapping:
        contextPath: /api/v${api.version}/*
    jmxEnabled: true

# lets listen on all ports to ensure we can be invoked from the pod ip address
server:
  address: 0.0.0.0
  port: 8080

# lets use a different management port in case you need to listen to HTTP requests on 8080
management:
  security:
    enabled: false
  address: 0.0.0.0
  port: 8081
  metrics:
    export:
      prometheus:
        enabled: true

# =============================================
# springboot actuator configurations
# ---------------------------------------------
# disable all management endpoints except health
endpoints:
  enabled: false
  health:
    enabled: true
  metrics:
    enabled: true
  prometheus:
    enabled: true
    # if you want to change the default prometheus endpoint, just change the 'id' to another value.
    id: prometheus

# =============================================
# opentracing configurations
# ---------------------------------------------
opentracing:
  jaeger:
    enabled: true
    enable-b3-propagation: true
    log-spans: true
    const-sampler:
      decision: true
    http-sender:
      url: http://jaeger-collector:14268/api/traces

jaeger.tracer:
  host: jaeger-agent.microservices.svc
  port: 6831

# =============================================
# auth-integration health parameters
# ---------------------------------------------
health:
  host: auth-integration-api-metrics.microservices-security.svc.cluster.local
  port: 8081
  contextPath: /health

# =============================================
# product api parameters
# ---------------------------------------------
product:
  api-key-name: product
  host: localhost
  port: 8070
  context-path: /api/v1/product
  status-path: /actuator/health

# =============================================
# stock api parameters
# ---------------------------------------------
stock:
  api-key-name: stock
  host: stock-api.microservices-security.svc.cluster.local
  port: 8080
  context-path: /api/v1/stock
  status-path: /actuator/health

# =============================================
# supplier api parameters
# ---------------------------------------------
supplier:
  api-key-name: supplier
  host: localhost
  port: 8080
  context-path: /api/v1/supplier
  status-path: /actuator/health
  auth:
    realm: 3scale-api
    client-id: a35f742a
    grant-type: password
    username: supplier-svcacc
    password: 12345
    secret: 7108964da928a5e508bd4f201d972704
    auth-server-uri: http://authorization-server.apps.arekkusu.io/auth/

# =============================================
# Authorization Settings (Keycloak)
# ---------------------------------------------
# NOTE. If using a self-signed certificate on RHSSO (Keycloak) a HTTPS endpoint will not work.
#
# Details:
# [ERROR] o.k.a.rotation.JWKPublicKeyLocator - Error when sending request to retrieve realm keys
# org.keycloak.adapters.HttpClientAdapterException: IO error
#
# So, in order to work properly, you must change to a unsecured protocol, using HTTP.
# Create a route on Openshift with the following:
#
# Hostname: authorization-server.apps.<YOUR-DOMAIN>
# Path: /
# Service: sso
# Secure Route: unchecked
#
# Also, in RHSSO realm settings, set 'Require SSL' to none on 'Login' tab.
# ---------------------------------------------

keycloak:
  ssl-required: external
  realm: 3scale-api
  resource: 8f314bfa
  auth-server-url: http://authorization-server.apps.arekkusu.io/auth/
  credentials:
    secret: 2d1beebcf1c9d00dd51be7a344abd87f
  use-resource-role-mappings: true
  security-constraints:
    - authRoles:
        - PRODUCT_ADMIN
      securityCollections:
        - name: CREATE
          patterns: /api/v1/product
          methods: POST
        - name: DELETE
          patterns: /api/v1/product/*
          methods: DELETE
        - name: PUT
          patterns: /api/v1/product/*
          methods: PUT
    - authRoles:
        - PRODUCT_BASIC
      securityCollections:
        - name: GET
          patterns: /api/v1/product/*
          methods: GET
        - name: LIST
          patterns: /api/v1/product
          methods: GET
    - authRoles:
        - CHECK_PRODUCT_STATUS
      securityCollections:
        - name: PRODUCT_STATUS
          patterns: /api/v1/product/status
          methods: GET
    - authRoles:
        - CHECK_SUPPLIER_STATUS
      securityCollections:
        - name: SUPPLIER_STATUS
          patterns: /api/v1/supplier/status
          methods: GET
    - authRoles:
        - CHECK_STOCK_STATUS
      securityCollections:
        - name: STOCK_STATUS
          patterns: /api/v1/stock/status
          methods: GET
    - authRoles:
        - SUPPLIER_MAINTAINER
      securityCollections:
        - name: SUPPLIER_MAINTAINER
          patterns: /api/v1/supplier/update
          methods: GET
    - authRoles:
        - STOCK_MAINTAINER
      securityCollections:
        - name: STOCK_MAINTAINER
          patterns: /api/v1/stock/update
          methods: GET
